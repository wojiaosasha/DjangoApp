# Generated by Django 3.2.16 on 2022-12-16 16:36

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Amount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(max_length=20)),
                ('color', models.CharField(max_length=20)),
                ('amount', models.IntegerField(default=0)),
                ('ordered', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(default='slug', editable=False)),
                ('name', models.CharField(max_length=50)),
                ('image', models.ImageField(null=True, upload_to='images/categories')),
                ('show', models.BooleanField(default=True)),
                ('parent', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.category')),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('whatsapp', 'Whatsapp'), ('instagram', 'Instagram'), ('telegram', 'Telegram'), ('vk', 'Vk'), ('youtube', 'Youtube'), ('avito', 'Avito')], max_length=20)),
                ('link', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='InfoPageImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/infopages')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/products')),
            ],
        ),
        migrations.CreateModel(
            name='SiteSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=12)),
                ('email', models.EmailField(max_length=254)),
                ('privacy_policy', models.FileField(upload_to='documents')),
                ('terms_of_use', models.FileField(upload_to='documents')),
                ('title_image', models.ImageField(blank=True, default=None, null=True, upload_to='images/title')),
                ('main_caterories', models.ManyToManyField(to='main.Category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(unique=True)),
                ('name', models.CharField(max_length=100)),
                ('price', models.IntegerField()),
                ('discount_price', models.IntegerField(null=True)),
                ('description', models.TextField()),
                ('show', models.BooleanField(default=True)),
                ('colors', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), blank=True, default=None, null=True, size=20)),
                ('sizes', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), blank=True, default=None, null=True, size=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.category')),
                ('images', models.ManyToManyField(blank=True, to='main.ProductImage')),
            ],
        ),
        migrations.CreateModel(
            name='InfoPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(default='slug', editable=False)),
                ('title', models.CharField(max_length=20)),
                ('title_image', models.ImageField(blank=True, null=True, upload_to='images/infopages')),
                ('text_area_1', models.TextField()),
                ('text_area_2', models.TextField(blank=True, null=True)),
                ('images', models.ManyToManyField(blank=True, to='main.InfoPageImage')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.BigIntegerField(unique=True)),
                ('code', models.CharField(blank=True, default=None, max_length=4, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_login', models.DateTimeField(default=None, null=True)),
                ('cart_amounts', django.contrib.postgres.fields.ArrayField(base_field=django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(default=0), default=list, size=None), blank=True, default=list, size=2)),
                ('cart', models.ManyToManyField(blank=True, to='main.Amount')),
                ('favorite', models.ManyToManyField(blank=True, to='main.Product')),
            ],
        ),
        migrations.AddField(
            model_name='amount',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.product'),
        ),
    ]
